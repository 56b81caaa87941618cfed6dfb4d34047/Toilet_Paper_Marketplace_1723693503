{
    "id": "table_with_title_add_button_and_edit_delete_options_1724444782",
    "name": "table-with-title-add-button-and-edit-delete-options",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "<template>\n  <div class=\"max-w-screen-xl mx-auto px-4 md:px-8\">\n    <div class=\"items-start justify-between md:flex\">\n      <div class=\"max-w-lg\"><h3 class=\"text-white-800 text-xl font-bold sm:text-2xl\">TABLE_TITLE_PLACEHOLDER_TEXT</h3></div>\n    </div>\n    <div v-if=\"tableHeaders.length == 0\">Executing a SQL query to populate data into this table...</div>\n    <div class=\"items-start justify-between md:flex mt-12 shadow-sm border rounded-lg overflow-x-auto\">\n      <table style=\"background-color: white;\" class=\"w-full table-auto text-sm text-left\">\n        <thead class=\"bg-gray-50 text-gray-600 font-medium border-b\">\n          <tr><th v-for=\"header in tableHeaders\" class=\"py-3 px-6\" v-html=\"header\"></th></tr>\n        </thead>\n        <tbody class=\"text-gray-600 divide-y\">\n          <tr v-for=\"(item, idx) in tableItems\" :key=\"idx\"><td class=\"py-3 px-6 whitespace-nowrap\" v-for=\"(value, key) in item\" v-if=\"tableHeaders.includes(key)\"><span v-html=\"value\"></span></td></tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\n// To add this component to the user's app, you must follow all three of these steps:\n// 1. In their html file, include `<table-with-title-add-button-and-edit-delete-options></table-with-title-add-button-and-edit-delete-options>`. Keep blank lines before and after this code. Do not remove the other components!\n// 2. In their html file, import the JS file for this component `./components/table-with-title-add-button-and-edit-delete-options.js` in the `HEAD` section. Keep blank lines before and after this code. Do not remove the other component imports!\n// 3. You are given the correct SQL statement -- replace the `PLACEHOLDER_SQL_STATEMENT` variable in this file with the actual SQL statement.\n\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      tableItems: [],\n      tableHeaders: [],\n      SQL_statement: 'PLACEHOLDER_SQL_STATEMENT',\n    };\n  },\n  methods: {\n    // start fetch_data_from_database() method\n    fetch_data_from_database(SQL_statement) {\n      return axios.post('https://nl2sql-prod.azurewebsites.net/execute_sql', {query: SQL_statement})\n        .then(response => {\n          const tableItems = response.data.result;\n          if (tableItems.length > 0) {\n            const tableHeaders = Object.keys(tableItems[0]);\n            this.tableItems = tableItems;\n            this.tableHeaders = tableHeaders;\n            return [tableHeaders, tableItems];\n          }\n        });\n    },\n    // end fetch_data_from_database() method\n  },\n  mounted() {\n    this.fetch_data_from_database(this.SQL_statement).then(([tableHeaders, tableItems]) => {\n      this.tableHeaders = tableHeaders;\n      this.tableItems = tableItems;\n    });\n  }\n};\n</script>\n\n<style scoped>\n/* You can add your component-specific styles here */\n</style>"
    },
    "w": 4,
    "h": 11,
    "x": 0,
    "y": 112,
    "i": "18",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true
}