{
    "id": "chatbot_1724451251",
    "name": "chatbot",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "\n<!--\n To add this component to the user's app, you must follow all three of these steps:\n 1. In the user app html file, include `<chatbot_1724451251></chatbot>` in the place where the chart needs to be inserted.\n 2. In the user app the html file's <head> section, import the JS file for this component `./components/chatbot.js`. You are strictly required to **NOT** remove anything else.\n 3. The chatbot sends the user's message along with a \"system prompt\" to an LLM to get the response. If the user writes about the kind of chatbot they want, include that context in the `system_prompt`, by replacing `PLACEHOLDER_LLM_SYSTEM_PROMPT` with your own written system prompt.\n-->\n\n<template>\n  <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n  <div>\n    <div v-if=\"showChatBot\" class=\"z-100 fixed bottom-0 left-0 mb-4 ml-4 mr-6 bg-white py-1 px-1 rounded-full cursor-pointer\" @click=\"toggleChat\">\n      <button class=\"text-white py-3 pl-3 pr-3 transition duration-300 flex items-center rounded-full\">\n        <img src=\"./images/chat_icon.png\" alt=\"chatbot-icon\" class=\"src w-12 h-12 rounded-full\">\n      </button>\n    </div>\n    <div id=\"main-chat-container\" ref=\"chatContainer\" class=\"flex fixed bottom-16 left-2 px-8 bg-gray-200 bg-opacity-50 blur-lg rounded-lg overflow-y-auto\" v-show=\"showChat\">\n      <div class=\"rounded-lg p-4 flex-grow-1\">\n        <div class=\"flex flex-row justify-between\">\n          <h2 class=\"pl-3 mt-2 pr-5 text-black\">Chatbot</h2>\n          <button @click=\"closeChat\" class=\"flex items-center bg-white text-xs text-black px-3 py-2.5 rounded-lg\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\n              <path d=\"M12 15.41l-4.59-4.59L6 11l6 6 6-6-1.41-1.41L12 15.41z\"></path>\n            </svg>\n          </button>\n        </div>\n        <div class=\"bg-white h-px w-full mt-1\"></div>\n        <div class=\"p-4 text-white rounded-t-lg flex justify-around items-center\" id=\"close-chat\"></div>\n        <div id=\"chatbox\" class=\"p-4 h-80 break-words overflow-auto\">\n          <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"flex justify-between w-full\">\n            <div v-if=\"message.role === 'user'\" class=\"flex justify-end mb-2 w-full\">\n              <div class=\"bg-blue-500 text-white px-4 py-2 rounded-lg self-start\" style=\"max-width: 70%;\">{{ message.content }}</div>\n            </div>\n            <div v-else-if=\"message.role === 'assistant'\" class=\"flex justify-start mb-2 w-full\">\n              <div class=\"bg-gray-500 text-white px-4 py-2 rounded-lg self-end\" style=\"max-width: 70%;\">{{ message.content }}</div>\n            </div>\n          </div>\n        </div>\n        <div id=\"main-input-box-field\" class=\"p-4 pb-10 flex w-full\">\n          <input v-model=\"message\" @keyup.enter=\"sendMessage\" type=\"text\" placeholder=\"Type prompt here...\" class=\"italic flex-grow px-3 py-2 bg-gray-100 text-black rounded-l-md outline-none border-none focus:border-transparent focus:ring-0\">\n          <button @click=\"sendMessage\" class=\"text-white px-4 py-2 rounded-r-md transition duration-300 bg-white\">\n            <img src=\"./images/send.png\" alt=\"Send-button\" class=\"src w-16px h-16px\">\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Chatbot',\n  delimiters: ['{', '}'],\n  data() {\n    return {\n      showChat: false,\n      showChatBot: true,\n      message: '',\n      messages: [\n        { role: 'user', content: 'hi' },\n        { role: 'assistant', content: 'Hello! How can I assist you?' }\n      ],\n      system_prompt: 'PLACEHOLDER_LLM_SYSTEM_PROMPT'\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.message.trim() !== '') {\n        this.messages.push({\n          role: 'user',\n          content: this.message.trim()\n        });\n        this.generateMessages();\n        this.message = '';\n      }\n    },\n    closeChat() {\n      this.showChat = false;\n      this.showChatBot = true;\n    },\n    toggleChat() {\n      this.showChatBot = !this.showChatBot;\n      this.showChat = !this.showChat;\n    },\n    generateMessages() {\n      let systemMessage = { role: 'system', content: this.system_prompt };\n      this.messages.unshift(systemMessage);\n\n      axios.post('https://makeinfinite-mentat-dev.azurewebsites.net/generate_message', {\n        messages: this.messages\n      }).then(response => {\n        this.messages.push({\n          role: 'assistant',\n          content: response.data.generated_messages.trim()\n        });\n      });\n    }\n  }\n};\n</script>\n"
    },
    "w": 7,
    "h": 7,
    "x": 1,
    "y": 387,
    "i": "49",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true
}